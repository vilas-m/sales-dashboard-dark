{"version":3,"sources":["Charts/DonutChart.js","Charts/FunnelChart.js","Charts/LineChart.js","Charts/StackedBarChart.js","Containers/Main.js","App.js","reportWebVitals.js","index.js"],"names":["DonutChart","useEffect","draw","d3","select","remove","radius","Math","min","svg","append","attr","width","height","pie","value","d","arc","innerRadius","outerRadius","outerArc","data_ready","name","color","selectAll","data","enter","index","style","posA","centroid","posB","posC","midangle","startAngle","endAngle","PI","text","pos","className","id","HorizontalBarChart","margin","map","i","product","sales","sort","a","b","yScale","range","domain","padding","call","tickSize","tickPadding","g","xScale","ticks","tickSizeOuter","tickFormat","bandwidth","LineChart","value1","value2","value3","push","date","moment","add","utc","valueOf","length","nice","appendPath","varaible","datum","x","y","StackedBarChart","month","value4","stackedData","keys","key","Main","FunnelChart","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b99f170c.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport \"./chartStyles.scss\";\r\n\r\nexport default function DonutChart() {\r\n  useEffect(() => {\r\n    draw();\r\n  }, []);\r\n\r\n  let draw = () => {\r\n    d3.select(\"#donut_chart\").select(\"svg\").remove();\r\n\r\n    let margin = 10;\r\n    let width = 248;\r\n    let height = 282;\r\n    let data = [\r\n      {\r\n        name: \"Internet\",\r\n        value: 20,\r\n        color: '#69d0fc'\r\n      },\r\n      {\r\n        name: \"Resellar\",\r\n        value: 100,\r\n        color: '#999999'\r\n      },\r\n    ];\r\n\r\n    let radius = Math.min(width, height) / 3 - margin;\r\n\r\n    let svg = d3\r\n      .select(\"#donut_chart\")\r\n      .append(\"svg\")\r\n      .attr(\"width\", \"100%\")\r\n      .attr(\"height\", \"100%\")\r\n      .attr(\"viewBox\", `0 0 ${width + 2 * margin} ${height + 2 * margin}`)\r\n      .append(\"g\")\r\n      .attr(\"transform\", `translate(${width / 2}, ${height / 2})`);\r\n\r\n    let pie = d3.pie().value((d) => {\r\n      return d.value;\r\n    });\r\n\r\n    let arc = d3\r\n      .arc()\r\n      .innerRadius(radius * 0.85) // This is the size of the donut hole\r\n      .outerRadius(radius * 0.85);\r\n\r\n    let outerArc = d3\r\n      .arc()\r\n      .innerRadius(radius * 0.9)\r\n      .outerRadius(radius * 0.9);\r\n\r\n    let data_ready = pie(data);\r\n\r\n    svg\r\n      .selectAll(\"slices\")\r\n      .data(data_ready)\r\n      .enter()\r\n      .append(\"path\")\r\n      .attr(\"d\", d3.arc().innerRadius(radius*0.7).outerRadius(radius))\r\n      .attr(\"fill\", (d) => {\r\n        return d3.schemeDark2[d.index];\r\n      });\r\n\r\n    svg\r\n      .selectAll(\"allPolylines\")\r\n      .data(data_ready)\r\n      .enter()\r\n      .append(\"polyline\")\r\n      .attr(\"stroke\", \"#adadad\")\r\n      .style(\"fill\", \"none\")\r\n      .attr(\"stroke-width\", 1)\r\n      .attr(\"points\", function (d) {\r\n        let posA = arc.centroid(d); // line insertion in the slice\r\n        let posB = outerArc.centroid(d); // line break: we use the other arc generator that has been built only for that\r\n        let posC = outerArc.centroid(d); // Label position = almost the same as posB\r\n        let midangle = d.startAngle + (d.endAngle - d.startAngle) / 2; // we need the angle to see if the X position will be at the extreme right or extreme left\r\n        posC[0] = radius * 0.95 * (midangle < Math.PI ? 1 : -1); // multiply by 1 or -1 to put it on the right or on the left\r\n        return [posA, posB, posC];\r\n      });\r\n\r\n    // Add the polylines between chart and labels:\r\n    svg\r\n      .selectAll(\"allLabels\")\r\n      .data(data_ready)\r\n      .enter()\r\n      .append(\"text\")\r\n      .text(function (d) {\r\n        return d.data.name;\r\n      })\r\n      .attr(\"class\", \"pie-text\")\r\n      .attr(\"transform\", function (d) {\r\n        let pos = outerArc.centroid(d);\r\n        let midangle = d.startAngle + (d.endAngle - d.startAngle) / 2;\r\n        pos[0] = radius * 0.99 * (midangle < Math.PI ? 1 : -1);\r\n        return \"translate(\" + pos + \")\";\r\n      })\r\n      .style(\"text-anchor\", function (d) {\r\n        let midangle = d.startAngle + (d.endAngle - d.startAngle) / 2;\r\n        return midangle < Math.PI ? \"start\" : \"end\";\r\n      });\r\n  };\r\n\r\n  return <div className=\"pieChart\" id=\"donut_chart\"></div>;\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport \"./chartStyles.scss\";\r\n\r\nconst HorizontalBarChart = () => {\r\n  useEffect(() => {\r\n    draw();\r\n  });\r\n\r\n  let draw = () => {\r\n    d3.select(\"#h_bar_chart\").select(\"svg\").remove();\r\n\r\n    let width = 400;\r\n    let height = 350;\r\n    let margin = { left: 100, right: 5, top: 30, bottom: 10 };\r\n    let productNames = [\r\n      \"Productivity\",\r\n      \"Convenience\",\r\n      \"Extreme\",\r\n      \"Moderation\",\r\n      \"Youth\",\r\n      \"Kids\",\r\n    ];\r\n\r\n    let data = productNames.map((i) => ({\r\n      product: i,\r\n      sales: d3.randomInt(1000000, 10000000)() / 1000000,\r\n    }));\r\n\r\n    data = data.sort((a, b) =>\r\n      a.sales > b.sales ? 1 : b.sales > a.sales ? -1 : 0\r\n    );\r\n\r\n    let svg = d3\r\n      .select(\"#h_bar_chart\")\r\n      .append(\"svg\")\r\n      .attr(\"width\", \"100%\")\r\n      .attr(\"height\", \"100%\")\r\n      .attr(\r\n        \"viewBox\",\r\n        `0 0 ${width + margin.left + margin.right} ${\r\n          height + margin.top + margin.bottom\r\n        }`\r\n      )\r\n      .append(\"g\")\r\n      .attr(\"transform\", `translate(${margin.left}, ${margin.top})`);\r\n\r\n    let yScale = d3\r\n      .scaleBand()\r\n      .range([height, 0])\r\n      .domain(\r\n        data.map((d) => {\r\n          return d.product;\r\n        })\r\n      )\r\n      .padding(0.2);\r\n\r\n    svg\r\n      .append(\"g\")\r\n      .attr(\"class\", \"axis\")\r\n      .call(d3.axisLeft(yScale).tickSize(0).tickPadding(7))\r\n      .call((g) => g.select(\".domain\").remove());\r\n\r\n    let xScale = d3\r\n      .scaleLinear()\r\n      .domain([0, d3.max(data, (d) => d.sales)])\r\n      .range([0, width]);\r\n\r\n    svg\r\n      .append(\"g\")\r\n      .attr(\"class\", \"axis\")\r\n      .call(\r\n        d3\r\n          .axisTop(xScale)\r\n          .ticks(0)\r\n          .tickSize(0)\r\n          .tickPadding(7)\r\n          .tickSizeOuter(6)\r\n          .tickFormat((d) => d + \" M\")\r\n      );\r\n    //   .attr(\"transform\", `translate(0, ${height})`)\r\n    //   .call((g) => g.select(\".domain\").remove());\r\n\r\n    svg\r\n      .selectAll(\"bars\")\r\n      .data(data)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"y\", (d) => yScale(d.product))\r\n      .attr(\"x\", (d) => width / 2 - xScale(d.sales) / 2)\r\n      .attr(\"height\", yScale.bandwidth())\r\n      .attr(\"width\", (d) => xScale(d.sales))\r\n      .attr(\"fill\", \"#4b99b8\");\r\n  };\r\n\r\n  return <div id={\"h_bar_chart\"} className=\"chart\"></div>;\r\n};\r\n\r\nexport default HorizontalBarChart;\r\n","import React, { useEffect } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport \"./chartStyles.scss\";\r\nimport moment from \"moment\";\r\n\r\nconst LineChart = () => {\r\n  let data = [];\r\n\r\n  useEffect(() => {\r\n    draw();\r\n  });\r\n\r\n  let draw = () => {\r\n    d3.select(\"#lineChart\").select(\"svg\").remove();\r\n\r\n    let width = 775;\r\n    let height = 250;\r\n    let margin = { left: 40, right: 20, top: 10, bottom: 20 };\r\n\r\n    for (let i = 0; i < 15; i++) {\r\n      let value1 = d3.randomInt(0, 23)();\r\n      let value2 = d3.randomInt(20, 43)();\r\n      let value3 = d3.randomInt(40, 50)();\r\n      data.push({\r\n        date: moment()\r\n          .add(-200 + i, \"days\")\r\n          .utc(),\r\n        value1,\r\n        value2,\r\n        value3,\r\n      });\r\n    }\r\n\r\n    let svg = d3\r\n      .select(\"#lineChart\")\r\n      .append(\"svg\")\r\n      .attr(\"width\", \"100%\")\r\n      .attr(\"height\", \"100%\")\r\n      .attr(\r\n        \"viewBox\",\r\n        `0 0 ${width + margin.left + margin.right} ${\r\n          height + margin.top + margin.bottom\r\n        }`\r\n      )\r\n      .append(\"g\")\r\n      .attr(\"transform\", `translate(${margin.left}, ${margin.top})`);\r\n\r\n    let xScale = d3\r\n      .scaleTime()\r\n      .domain([\r\n        data[0][\"date\"].valueOf(),\r\n        data[data.length - 1][\"date\"].valueOf(),\r\n      ])\r\n      .range([0, width])\r\n      .nice();\r\n\r\n    let yScale = d3.scaleLinear().domain([0, 50]).range([height, 0]);\r\n\r\n    // svg\r\n    //   .append(\"g\")\r\n    //   .style(\"opacity\", 0.5)\r\n    //   .call(d3.axisLeft(yScale).ticks(5).tickSize(0).tickPadding(20))\r\n    //   .call((g) => g.select(\".domain\").remove());\r\n\r\n    // svg\r\n    //   .append(\"g\")\r\n    //   .style(\"opacity\", 0.5)\r\n    //   .call(d3.axisBottom(xScale).ticks(4).tickSize(0).tickPadding(10))\r\n    //   .attr(\"transform\", `translate(0, ${height})`)\r\n    //   .call((g) => g.select(\".domain\").remove());\r\n\r\n    let appendPath = (color, varaible) => {\r\n      svg\r\n        .append(\"path\")\r\n        .datum(data)\r\n        .attr(\"fill\", \"none\")\r\n        .attr(\"stroke\", color)\r\n        .attr(\"stroke-width\", 1.5)\r\n        .attr(\r\n          \"d\",\r\n          d3\r\n            .line()\r\n            .x((d) => {\r\n              return xScale(d.date);\r\n            })\r\n            .y((d) => {\r\n              return yScale(d[varaible]);\r\n            })\r\n        );\r\n    };\r\n\r\n    appendPath(\"#e38960\", \"value1\");\r\n    appendPath(\"#63bcb4\", \"value2\");\r\n    appendPath(\"#d36463\", \"value3\");\r\n  };\r\n\r\n  return <div className={\"chart\"} id={\"lineChart\"}></div>;\r\n};\r\n\r\nexport default LineChart;\r\n","import React, { useEffect } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport \"./chartStyles.scss\";\r\n\r\nexport default function StackedBarChart() {\r\n  useEffect(() => {\r\n    draw();\r\n  }, []);\r\n\r\n  let draw = () => {\r\n    d3.select(\"#s_b_chart\").select(\"svg\").remove();\r\n\r\n    let margin = { left: 40, bottom: 40, top: 20, right: 20 };\r\n    let width = 775;\r\n    let height = 250;\r\n    let months = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ];\r\n\r\n    let data = months.map((i) => {\r\n      return {\r\n        month: i,\r\n        value1: d3.randomInt(10, 30)(),\r\n        value2: d3.randomInt(10, 50)(),\r\n        value3: d3.randomInt(10, 70)(),\r\n        value4: d3.randomInt(20, 120)(),\r\n      };\r\n    });\r\n\r\n    let svg = d3\r\n      .select(\"#s_b_chart\")\r\n      .append(\"svg\")\r\n      .attr(\"width\", \"100%\")\r\n      .attr(\"height\", \"100%\")\r\n      .attr(\r\n        \"viewBox\",\r\n        `0 0 ${width + margin.left + margin.right} ${\r\n          height + margin.top + margin.bottom\r\n        }`\r\n      )\r\n      .append(\"g\")\r\n      .attr(\"transform\", `translate(${margin.left}, ${margin.top})`);\r\n\r\n    let xScale = d3\r\n      .scaleBand()\r\n      .range([0, width])\r\n      .domain(\r\n        data.map((d) => {\r\n          return d.month;\r\n        })\r\n      )\r\n      .padding(0.1);\r\n\r\n    svg\r\n      .append(\"g\")\r\n      .attr(\"transform\", `translate(0, ${height})`)\r\n      .attr(\"class\", \"axis\")\r\n      .call(d3.axisBottom(xScale).tickSize(0).tickPadding(10))\r\n      .call((g) => g.select(\".domain\").remove());\r\n\r\n    let yScale = d3.scaleLinear().domain([0, 140]).range([height, 0]);\r\n\r\n    svg\r\n      .append(\"g\")\r\n      .attr(\"class\", \"axis\")\r\n      .call(\r\n        d3\r\n          .axisLeft(yScale)\r\n          .ticks(1)\r\n          .tickSize(-width)\r\n          .tickSizeOuter(0)\r\n          .tickPadding(10)\r\n      )\r\n      .call((g) => g.select(\".domain\").remove());\r\n\r\n    let stackedData = d3.stack().keys([\"value1\", \"value2\", \"value3\"])(data);\r\n\r\n    let color = d3\r\n      .scaleOrdinal()\r\n      .domain([\"value1\", \"value2\", \"value3\"])\r\n      .range([\"#333\", \"#69d0fc\", \"#999999\"]);\r\n\r\n    svg\r\n      .append(\"g\")\r\n      .selectAll(\"g\")\r\n      .data(stackedData)\r\n      .enter()\r\n      .append(\"g\")\r\n      .attr(\"fill\", (d) => {\r\n        return color(d.key);\r\n      })\r\n      .selectAll(\"rect\")\r\n      .data((d) => {\r\n        return d;\r\n      })\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", (d) => {\r\n        return xScale(d.data.month);\r\n      })\r\n      .attr(\"y\", (d) => {\r\n        return yScale(d[1]);\r\n      })\r\n      .attr(\"height\", (d) => {\r\n        return yScale(d[0]) - yScale(d[1]);\r\n      })\r\n      .attr(\"width\", xScale.bandwidth());\r\n\r\n      svg\r\n      .append(\"path\")\r\n      .datum(data)\r\n      .attr(\"fill\", \"none\")\r\n      .attr(\"stroke\", '#dbdbdb')\r\n      .attr(\"stroke-width\", 2.5)\r\n      .attr(\r\n        \"d\",\r\n        d3\r\n          .line()\r\n          .x((d) => {\r\n            return xScale(d.month) + xScale.bandwidth()/2;\r\n          })\r\n          .y((d) => {\r\n            return yScale(d.value4);\r\n          })\r\n        //   .curve(d3.curveCardinal.tension(0.5))\r\n      );\r\n  };\r\n\r\n  return <div id=\"s_b_chart\"></div>;\r\n}\r\n","import React from \"react\";\r\nimport DonutChart from \"../Charts/DonutChart\";\r\nimport FunnelChart from \"../Charts/FunnelChart\";\r\nimport LineChart from \"../Charts/LineChart\";\r\nimport StackedBarChart from \"../Charts/StackedBarChart\";\r\nimport \"./styles.scss\";\r\n\r\nconst Main = () => {\r\n  return (\r\n    <div className=\"main\">\r\n      <div className=\"w-content-small\">\r\n        <div className=\"top\"></div>\r\n        <div className=\"middle\"></div>\r\n        <div className=\"bottom\">\r\n            <FunnelChart />\r\n        </div>\r\n      </div>\r\n      <div className=\"w-content\">\r\n        <div className=\"top\"></div>\r\n        <div className=\"middle\">\r\n          <StackedBarChart />\r\n        </div>\r\n        <div className=\"bottom\">\r\n            <LineChart />\r\n        </div>\r\n      </div>\r\n      <div className=\"w-content-small\">\r\n        <div className=\"top\"></div>\r\n        <div className=\"middle\">\r\n          <DonutChart />\r\n        </div>\r\n        <div className=\"bottom\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n\r\n// 768\r\n// 153 20%\r\n// 467 60%\r\n// 150 20%\r\n\r\n// 448\r\n// 53 12%\r\n// 209  46%\r\n// 186 42%\r\n","import Main from './Containers/Main'\n\nfunction App() {\n  return <div style={{ width: \"100%\", height: \"100vh\" }}>\n      <Main />\n  </div>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}